TICK Stack
-------------

1.DOCKER-COMPOSE
-----------------
Run the complete TICK stack using this docker-compose file. By using docker-compose all four official TICK stack images are started and linked together.

Steps followed(for installing TICK stack on docker)

Start all the images as follows:

docker-compose up -d

Checking that InfluxDB works:

Run this curl command, if no errors occur InfluxDB is running:

curl http://localhost:8086/ping
The influx client

Use the built-in influx cli service:

docker-compose run influxdb-cli
Check that Telegraf works

By default, the Telegraf creates a telegraf database. Check that InfluxDB has such a database in addition to the _internal database.

docker-compose run influxdb-cli
> show databases
Check that Chronograf works

Access the Chronograf inteface, http://localhost:10000

Add InfluxDB server.

Check Kapacitor works

First, run this curl command, if no errors occur Kapacitor is running:

curl http://localhost:9092/kapacitor/v1/ping
Use the built-in kapacitor cli service:

docker-compose run kapacitor-cli
$ kapacitor list tasks
Confirm Kapacitor is subscribed to all databases in InfluxDB

docker-compose run influxdb-cli
> show subscriptions


2.LOCALHOST
-------------------

Install everything needed:

Influxdb
---------
wget https://dl.influxdata.com/influxdb/releases/influxdb-1.1.1.x86_64.rpm

sudo yum install influxdb-1.1.1.x86_64.rpm

cat <<EOF | sudo tee /etc/yum.repos.d/influxdb.repo
[influxdb]
name = InfluxDB Repository - RHEL \$releasever
baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable
enabled = 1
gpgcheck = 1
gpgkey = https://repos.influxdata.com/influxdb.key
EOF

sudo yum install influxdb
sudo systemctl start influxdb

influxd -config /etc/influxdb/influxdb.conf

echo $INFLUXDB_CONFIG_PATH
/etc/influxdb/influxdb.conf

influxd

Telegraf
--------

wget https://dl.influxdata.com/telegraf/releases/telegraf-1.1.1.x86_64.rpm

sudo yum install telegraf-1.1.1.x86_64.rpm

cat <<EOF | sudo tee /etc/yum.repos.d/influxdb.repo
  [influxdb]
  name = InfluxDB Repository - RHEL \$releasever
  baseurl = https://repos.influxdata.com/rhel/\$releasever/\$basearch/stable
  enabled = 1
  gpgcheck = 1
  gpgkey = https://repos.influxdata.com/influxdb.key
  EOF

sudo yum install telegraf
  
sudo systemctl start telegraf 

telegraf -sample-config > telegraf.conf

Kapacitor
-----------

wget https://dl.influxdata.com/kapacitor/releases/kapacitor_1.1.1_amd64.deb

sudo dpkg -i kapacitor_1.1.1_amd64.deb

kapacitord -config /usr/local/etc/kapacitor.conf

sudo systemctl start kapacitor

Tickscript

stream
    // Select just the cpu measurement from our example database.
    |from()
        .measurement('usage_idle')
        .where(lambda:'cpu' == 'cpu-total')
    |alert()
        .crit(lambda: TRUE)
        .warn(lambda: "value <  30")
        .crit(lambda: "value <  10")
        // Whenever we get an alert write it to a file.
        .log('/tmp/alerts.log')
        
kapacitor define -name cpu_alert -type stream -tick cpu_alert.tick -dbrp kapacitor_example.default

kapacitor show cpu_alert

kapacitor enable cpu_alert

kapacitor record stream -name cpu_alert -duration 20s

kapacitor list recordings

cat /tmp/alerts.log

3.DOCKER
---------
docker run -d --name influxdb -p 8083:8083 -p 8086:8086 influxdb

docker run -d --name telegraf --net=container:influxdb -v ~/telegraf.conf:/etc/telegraf/telegraf.conf:ro telegraf

docker run -p 9092:9092 -d --link influxdb:influxdb --name kapacitor -v ~/Downloads/kapacitor.conf:/etc/kapacitor/kapacitor.conf:ro -v ~/tick/:/root -w=/root kapacitor 

Created a tick-script and added to the -/tick folder

kapacitor define cpu_alert -type stream -tick ~/cpu_alert.tick -dbrp telegraf.autogen

kapacitor show cpu_alert

kapacitor enable cpu_alert

kapacitor stats ingress

cat /var/log/kapacitor

Now the ip of the "kapacitor" container is found out  using 'docker inspet kapacitor'.
and passed into the brwoser 
e.g. http://172.17.0.3:9092/kapacitor/v1/tasks






